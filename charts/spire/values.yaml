# Default configuration for Spire chart
# SPDX-License-Identifier: APACHE-2.0

## @section Global parameters
## Note: the parameter values specified here will override the chart level values for these parameters.
##
global:
  deleteHooks:
    ## @param global.deleteHooks.enabled Override flag for delete hooks
    enabled: true
  installAndUpgradeHooks:
    ## @param global.installAndUpgradeHooks.enabled Override flag for delete hooks
    enabled: true
  k8s:
    ## @param global.k8s.clusterDomain Cluster domain name configured for Spire install
    ##
    clusterDomain: cluster.local
  spire:
    ## @param global.spire.upstreamServerAddress Address for upstream Spire instance
    upstreamServerAddress: ""
    ## @param global.spire.bundleConfigMap A configmap containing the Spire bundle
    bundleConfigMap: ""
    ## @param global.spire.clusterName The name of the k8s cluster for Spire install
    clusterName: example-cluster
    image:
        ## @param global.spire.image.registry Image registry override
      registry: ""
    ## @param global.spire.jwtIssuer The issuer for Spire JWT tokens
    jwtIssuer: oidc-discovery.example.org
    ## @param global.spire.trustDomain The trust domain for Spire install
    trustDomain: example.org

## @section Spire server parameters
## Parameter values for Spire server
##
spire-server:
  ## @param spire-server.enabled Flag to enable Spire server
  enabled: true
  ## @param spire-server.fullnameOverride Overrides the full name of Spire server pods
  fullnameOverride: ""
  ## @param spire-server.nameOverride Overrides the name of Spire server pods
  nameOverride: server
  ## @param spire-server.namespaceOverride Overrides the namespace where Spire server pods are installed
  namespaceOverride: ""
  ## @param spire-server.clusterName Cluster name configured for Spire servers
  clusterName: example-cluster
  ## @param spire-server.clusterDomain Cluster domain for Spire servers
  clusterDomain: cluster.local
  ## @param spire-server.trustDomain Domain name for Spire server trust bundle
  trustDomain: example.org
  ## @param spire-server.bundleConfigMap Config map name for Spire servers trust bundle
  bundleConfigMap: spire-bundle
  ## @param spire-server.caKeyType Key type for certificate authority
  caKeyType: rsa-2048
  ## @param spire-server.caTTL TTL for certificate authority
  caTTL: 24h
  ## @param spire-server.defaultJwtSvidTTL Default TTL for JWT tokens issued by Spire
  defaultJwtSvidTTL: 1h
  ## @param spire-server.defaultX509SvidTTL Default TTL for X509 tokens issued by Spire
  defaultX509SvidTTL: 4h
  ## @param spire-server.jwtIssuer Issuer for JWT tokens
  jwtIssuer: oidc-discovery.example.org
  ## @param spire-server.logLevel Log level for Spire servers
  logLevel: info
  ## @param spire-server.replicaCount Replica count for Spire servers
  replicaCount: 1
  global:
    deleteHooks:
      ## @param spire-server.global.deleteHooks.enabled Override flag for delete hooks
      enabled: true
    installAndUpgradeHooks:
      ## @param spire-server.global.installAndUpgradeHooks.enabled Override flag for install and upgrade hooks
      enabled: true
    k8s:
      ## @param spire-server.global.k8s.clusterDomain Cluster domain name configured for Spire server
      clusterDomain: cluster.local
    spire:
      ## @param spire-server.global.spire.bundleConfigMap Bundle config map for Spire server
      bundleConfigMap: ""
      ## @param spire-server.global.spire.clusterName The name of the k8s cluster for Spire server
      clusterName: example-cluster
      image:
        ## @param spire-server.global.spire.image.registry Image registry for Spire server
        registry: ""
      ## @param spire-server.global.spire.jwtIssuer JWT Issuer configured for Spire server
      jwtIssuer: oidc-discovery.example.org
      ## @param spire-server.global.spire.trustDomain Trust domain name configured for Spire server
      trustDomain: example.org
      ## @param spire-server.global.spire.upstreamServerAddress Server address for upstream Spire server
      upstreamServerAddress: ""
  ca_subject:
    ## @param spire-server.ca_subject.common_name Common name for CA
    common_name: example.org
    ## @param spire-server.ca_subject.country Country for CA
    country: NL
    ## @param spire-server.ca_subject.organization Organization for CA
    organization: Example
  configMap:
    ## @param spire-server.configMap.annotations Annotations for Spire server configmap
    annotations: {}
  controllerManager:
    deleteHook:
      ## @param spire-server.controllerManager.deleteHook.enabled Override flag for delete hook
      enabled: true
    installAndUpgradeHook:
      ## @param spire-server.controllerManager.installAndUpgradeHook.enabled Override flag for install and upgrade hooks
      enabled: true
    ## @param spire-server.controllerManager.enabled Enable controller manager and provision CRD's
    enabled: true
    configMap:
      ## @param spire-server.controllerManager.configMap.annotations
      annotations: {}
    identities:
      ## @param spire-server.controllerManager.identities.enabled Create a Spire server entry
      enabled: true
      ## @param spire-server.controllerManager.identities.dnsNameTemplates DNS name teamplates for Spire server entry
      dnsNameTemplates: []
      ## @param spire-server.controllerManager.identities.federatesWith List of Spire servers for federation of entries
      federatesWith: []
      ## @param spire-server.controllerManager.identities.namespaceSelector Namespace selector for Spire server entry
      namespaceSelector: {}
      ## @param spire-server.controllerManager.identities.podSelector Pod selector for Spire server setting
      podSelector: {}
      ## @param spire-server.controllerManager.identities.spiffeIDTemplate Template for SPIFFE ID
      spiffeIDTemplate: spiffe://{{ .TrustDomain }}/ns/{{ .PodMeta.Namespace }}/sa/{{
        .PodSpec.ServiceAccountName }}
    ## @param spire-server.controllerManager.ignoreNamespaces Namespaces List of namespaces to ignore for Spire server entry
    ignoreNamespaces:
    - kube-system
    - kube-public
    - local-path-storage
    ## @param spire-server.controllerManager.image.pullPolicy Cluster pull policy
    ## @param spire-server.controllerManager.image.registry Registry for Spire controller manager images
    ## @param spire-server.controllerManager.image.repository Repository for the Spire controller manager image
    ## @param spire-server.controllerManager.image.tag Tag for Spire controller manager image
    ## @param spire-server.controllerManager.image.version App version for Spire controller manager image
    ##
    image:
      pullPolicy: IfNotPresent
      registry: ghcr.io
      repository: spiffe/spire-controller-manager
      tag: 0.2.3
      version: ""
    ## @param spire-server.controllerManager.resources Resources request and limits for Spire controller manager
    ## ref: https://kubernetes.io/docs/user-guide/compute-resources/
    ## Example:
    ## resources:
    ##   limits:
    ##     memory: 512Mi
    ##   requests:
    ##     memory: 256Mi
    ##     cpu: 250m
    ##
    resources: {}
    ## @param spire-server.controllerManager.securityContext Security contexts to be set at a pod level
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
    ## Example:
    ## securityContext:
    ##   allowPrivilegeEscalation: false
    ##   seccompProfile:
    ##     type: RuntimeDefault:
    ##
    securityContext: {}
    ## @param spire-server.controllerManager.service.annotations Annotations for service object
    ## @param spire-server.controllerManager.service.port Service port
    ## @param spire-server.controllerManager.service.type Service type
    ##
    service:
      annotations: {}
      port: 443
      type: ClusterIP
    validatingWebhookConfiguration:
      ## @param spire-server.controllerManager.validatingWebhookConfiguration.failurePolicy Failure policy can be "Ignore" or "Fail"
      ## Ref: https://kubernetes.io/docs/reference/access-authn-authz/validating-admission-policy/#failure-policy
      failurePolicy: Fail
  ## @param spire-server.affinity Node affinity for Spire server pods
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/assign-pods-nodes-using-node-affinity/#schedule-a-pod-using-required-node-affinity
  ## Example:
  ## affinity:
  ##   nodeAffinity:
  ##     requiredDuringSchedulingIgnoredDuringExecution:
  ##       nodeSelectorTerms:
  ##       - matchExpressions:
  ##         - key: nodeType
  ##           operator: In
  ##           values:
  ##           - spiffeNode:
  affinity: {}
  ## @param spire-server.autoscaling.enabled Enable horizontal pod autoscaling
  ## @param spire-server.autoscaling.maxReplicas Maximum replicas for autoscaling
  ## @param spire-server.autoscaling.minReplicas Minimum replicas for autoscaling
  ## @param spire-server.autoscaling.targetCPUUtilizationPercentage Target CPU utilization
  ## Ref: https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/
  ##
  autoscaling:
    enabled: false
    maxReplicas: 100
    minReplicas: 1
    targetCPUUtilizationPercentage: 80
  dataStore:
    sql:
      ## @param spire-server.dataStore.sql.databaseName Database name
      databaseName: spire
      ## @param spire-server.dataStore.sql.databaseType Database type supported values "sqlite3", "mysql" or "postgres"
      databaseType: sqlite3
      externalSecret:
        ## @param spire-server.dataStore.sql.externalSecret.enabled Enable external secret for datastore creds
        enabled: false
        ## @param spire-server.dataStore.sql.externalSecret.key The key of the secret object whose value is the dataStore.sql password
        key: ""
        ## @param spire-server.dataStore.sql.externalSecret.name The name of the secret
        name: ""
      ## @param spire-server.dataStore.sql.host Hostname for datastore
      host: ""
      ## @param spire-server.dataStore.sql.port Port for datastore
      port: 0
      ## @param spire-server.dataStore.sql.options Options specific to datastore
      options: []
      ## @param spire-server.dataStore.sql.username Username for datastore
      username: spire
      ## @param spire-server.dataStore.sql.password Password for datastore
      password: ""
      ## @param spire-server.dataStore.sql.plugin_data Additional configuration for the datastore Spire server plugin
      ## Ref: https://github.com/spiffe/spire/blob/v1.7.0/doc/plugin_server_datastore_sql.md
      plugin_data: {}
  ## @param spire-server.initContainers Init container definitions for Spire server pods
  ## Ref: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/
  ## Example:
  ## initContainers:
  ## - name: initialization-logic
  ##   image: cgr.dev/chainguard/bash:5.2.15
  ##   command: ['sh', '-c', 'echo "Intialization logic here..."']
  ##
  initContainers: []
  ## @param spire-server.extraContainers Additional container definitions to run alongside Spire server
  ## Ref: https://kubernetes.io/docs/concepts/containers/
  ## Example:
  ## extraContainers:
  ## - name: extra-container
  ##   image: cgr.dev/chainguard/bash:5.2.15
  ##   command: ['sh', '-c', 'echo "Additional container logic here..."']
  ##
  extraContainers: []
  ## @param spire-server.extraVolumes Additional volumes to attach to Spire server pods
  ## Ref: https://kubernetes.io/docs/concepts/storage/volumes/
  ## Example:
  ## extraVolumes:
  ## - name: extra-volume-1
  ##   emptyDir: {}
  ##
  extraVolumes: []
  ## @param spire-server.extraVolumeMounts Additional volume mounts for Spire server container
  ## Ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-volume-storage/
  ## Example:
  ## extraVolumeMounts:
  ## - name: extra-volume-mount-1
  ##   mountPath: /data/mount1
  ##   subPath: "path"
  ##
  extraVolumeMounts: []
  federation:
    ## @param spire-server.federation.enabled Enable federation for Spire server
    enabled: false
    bundleEndpoint:
      ## @param spire-server.federation.bundleEndpoint.address Address for bundle endpoint for federation
      address: 0.0.0.0
      ## @param spire-server.federation.bundleEndpoint.port Port for bundle endpoint for federation
      port: 8443
    ## @param spire-server.federation.ingress.enabled Enable ingress for Spire server
    ## @param spire-server.federation.ingress.className Ingress class name
    ## @param spire-server.federation.ingress.annotations Annotations for ingress object
    ##
    ingress:
      enabled: false
      className: ""
      annotations: {}
      ## @param spire-server.federation.ingress.hosts [array] List of hosts configured for ingress with path
      ## Ref: https://kubernetes.io/docs/concepts/services-networking/ingress/#ingress-rules
      ## Example:
      ## hosts:
      ## - host: spire-server-federation.example.org
      ##  paths:
      ##  - path: /
      ##    pathType: Prefix
      ##
      hosts:
      - host: spire-server-federation.example.org
        paths:
        - path: /
          pathType: Prefix
      ## @param spire-server.federation.ingress.tls List of tls secrets for ingress
      ## Ref: https://kubernetes.io/docs/concepts/services-networking/ingress/#tls
      ## tls:
      ## - hosts:
      ##   - spire-server-federation.example.org
      ##   secretName: tls-secret
      ##
      tls: []
  ## @param spire-server.image.pullPolicy Cluster pull policy
  ## @param spire-server.image.registry Registry for Spire server images
  ## @param spire-server.image.repository Repository for the Spire server image
  ## @param spire-server.image.tag Tag for Spire server image
  ## @param spire-server.image.version App version for Spire server image
  ##
  image:
    pullPolicy: IfNotPresent
    registry: ghcr.io
    repository: spiffe/spire-server
    tag: ""
    version: ""
  ## @param spire-server.imagePullSecrets Pull secrets for authenticated registries
  ## Example:
  ## imagePullSecrets:
  ##   - myRegistryPullSecret
  ##
  imagePullSecrets: []
  ingress:
    ## @param spire-server.ingress.enabled Enable ingress for Spire server
    enabled: false
    ## @param spire-server.ingress.className Ingress class name
    className: ""
    ## @param spire-server.ingress.annotations Annotations for ingress object
    annotations: {}
    ## @param spire-server.ingress.hosts [array] List of hosts configured for ingress with path
    ## Ref: https://kubernetes.io/docs/concepts/services-networking/ingress/#ingress-rules
    ## Example:
    ## hosts:
    ## - host: spire-server.example.org
    ##  paths:
    ##  - path: /
    ##    pathType: Prefix
    ##
    hosts:
    - host: spire-server.example.org
      paths:
      - path: /
        pathType: Prefix
    ## @param spire-server.ingress.tls List of tls secrets for ingress
    ## Ref: https://kubernetes.io/docs/concepts/services-networking/ingress/#tls
    ## tls:
    ## - hosts:
    ##   - spire-server.example.org
    ##   secretName: tls-secret
    ##
    tls: []
  ## @param spire-server.livenessProbe.failureThreshold Failure threshold for pod liveness probe
  ## @param spire-server.livenessProbe.initialDelaySeconds Initial delay in seconds for pod liveness probe
  ## @param spire-server.livenessProbe.periodSeconds Period in seconds for pod liveness probe
  ## @param spire-server.livenessProbe.timeoutSeconds Timeout in seconds for pod liveness probe
  ##
  livenessProbe:
    failureThreshold: 2
    initialDelaySeconds: 15
    periodSeconds: 60
    timeoutSeconds: 3
  ## @param spire-server.readinessProbe.initialDelaySeconds Initial delay in seconds for pod readiness probe
  ## @param spire-server.readinessProbe.periodSeconds Health check period in seconds for pod readiness probe
  ##
  readinessProbe:
    initialDelaySeconds: 5
    periodSeconds: 5
  ## @param spire-server.nodeSelector Nodeselector details for Spire server pods
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#nodeselector
  ## Example:
  ## nodeSelector:
  ##   kubernetes.io/arch: amd64
  ##
  nodeSelector: {}
  nodeAttestor:
    k8sPsat:
      ## @param spire-server.nodeAttestor.k8sPsat.enabled Enable Spire server nodeattestor plugin using k8sPsat
      enabled: true
      ## @param spire-server.nodeAttestor.k8sPsat.serviceAccountAllowList List of service accounts allowed for k8sPsat
      ## Ref: https://github.com/spiffe/spire/blob/v1.7.0/doc/plugin_server_nodeattestor_k8s_psat.md
      serviceAccountAllowList: []
  notifier:
    k8sbundle:
      ## @param spire-server.notifier.k8sbundle.namespace Namespace for notifier to push CA bundle
      ## Ref: https://github.com/spiffe/spire/blob/v1.7.0/doc/plugin_server_notifier_k8sbundle.md
      namespace: ""
  persistence:
    ## @param spire-server.persistence.accessMode Access mode of underlying PV
    accessMode: ReadWriteOnce
    ## @param spire-server.persistence.hostPath Hostpath of the PV
    hostPath: ""
    ## @param spire-server.persistence.size Size of underlying PVC
    size: 1Gi
    ## @param spire-server.persistence.type Type of the volume
    type: pvc
  ## @param spire-server.podAnnotations Annotations to be added at a pod level
  ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
  ## Example:
  ## podAnnotations:
  ##   annotationName1: annotationValue1
  ##   annotationName2: annotationValue2
  ##
  podAnnotations: {}
  ## @param spire-server.podSecurityContext Security contexts to be set at a container level
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
  ## Example:
  ## podSecurityContext:
  ##   allowPrivilegeEscalation: false
  ##   seccompProfile:
  ##     type: RuntimeDefault:
  ##
  podSecurityContext: {}
  ## @param spire-server.resources Resources request and limits for Spire server
  ## ref: https://kubernetes.io/docs/user-guide/compute-resources/
  ## Example:
  ## resources:
  ##   limits:
  ##     memory: 512Mi
  ##   requests:
  ##     memory: 256Mi
  ##     cpu: 250m
  ##
  resources: {}
  ## @param spire-server.securityContext Security contexts to be set at a pod level
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
  ## Example:
  ## securityContext:
  ##   allowPrivilegeEscalation: false
  ##   seccompProfile:
  ##     type: RuntimeDefault:
  ##
  securityContext: {}
  ## @param spire-server.service.annotations Annotations for service object
  ## @param spire-server.service.port Service port
  ## @param spire-server.service.type Service type
  ##
  service:
    annotations: {}
    port: 8081
    type: ClusterIP
  serviceAccount:
    ## @param spire-server.serviceAccount.create Flag for service account creation
    create: true
    ## @param spire-server.serviceAccount.name Name of service account for Spire server
    name: ""
    ## @param spire-server.serviceAccount.annotations Annotations to be added to service account
    ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
    ## Example:
    ## annotations:
    ##   annotationName1: annotationValue1
    ##   annotationName2: annotationValue2
    ##
    annotations: {}
  telemetry:
    prometheus:
      ## @param spire-server.telemetry.prometheus.enabled Flag to enable prometheus monitoring
      enabled: false
      podMonitor:
        ## @param spire-server.telemetry.prometheus.podMonitor.enabled Flag for enabling podMonitor
        enabled: false
        ## @param spire-server.telemetry.prometheus.podMonitor.namespace Namespace for podMonitor
        namespace: ""
        ## @param spire-server.telemetry.prometheus.podMonitor.labels Labels for podMonitor
        ## Ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
        ## Example:
        ## labels:
        ##   app: spire-server
        ##
        labels: {}
  tests:
    bash:
      ## @param spire-server.tests.bash.image.pullPolicy Cluster pull policy
      ## @param spire-server.tests.bash.image.registry Registry for testing bash image
      ## @param spire-server.tests.bash.image.repository Repository for testing bash image
      ## @param spire-server.tests.bash.image.tag Tag for testing bash image
      ## @param spire-server.tests.bash.image.version App version for testing bash image
      ##
      image:
        pullPolicy: IfNotPresent
        registry: cgr.dev
        repository: chainguard/bash
        tag: 5.2.15
        version: ""
      ## @param spire-server.tests.bash.hostAliases [array] List of host aliases for testing
      hostAliases: []
    tls:
      ## @param spire-server.tests.tls.enabled Flag for enabling tls for testing
      enabled: false
      ## @param spire-server.tests.tls.customCA CustomCA for testing with tls
      customCA: ""
  ## @param spire-server.tolerations Specifies pod tolerations
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/
  ## Example:
  ##   tolerations:
  ##     - key: "example-key"
  ##       operator: "Exists"
  ##       effect: "NoSchedule":
  ##
  tolerations: []
  tools:
    kubectl:
      ## @param spire-server.tools.kubectl.image.pullPolicy Cluster pull policy
      ## @param spire-server.tools.kubectl.image.registry Registry for kubectl image
      ## @param spire-server.tools.kubectl.image.repository Repository for kubectl image
      ## @param spire-server.tools.kubectl.image.tag Tag for kubectl image
      ## @param spire-server.tools.kubectl.image.version App version for kubectl image
      ##
      image:
        pullPolicy: IfNotPresent
        registry: docker.io
        repository: rancher/kubectl
        tag: ""
        version: ""
  ## @param spire-server.topologySpreadConstraints Specifies topology spread constraints for pod scheduling
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/topology-spread-constraints/
  ## Example:
  ## topologySpreadConstraints:
  ## - maxSkew: 2
  ##   topologyKey: topology.kubernetes.io/zone
  ##   whenUnsatisfiable: ScheduleAnyway
  ##   labelSelector:
  ##     matchLabels:
  ##       app: spire-server
  topologySpreadConstraints: []
  tornjak:
    ## @param spire-server.tornjak.enabled Flag to enable tornjak on the server side
    enabled: false
    config:
      ## Ref: https://github.com/spiffe/spire/blob/v1.7.0/doc/plugin_server_datastore_sql.md
      dataStore:
        ## @param spire-server.tornjak.config.dataStore.driver Tornjak datastore driver
        driver: sqlite3
        ## @param spire-server.tornjak.config.dataStore.file File path for datastore plugin
        file: /run/spire/data/tornjak.sqlite3
      clientCA:
        ## @param spire-server.tornjak.config.clientCA.name Name of the resource secret or configMap with user CA for TLS
        name: tornjak-client-ca
        ## @param spire-server.tornjak.config.clientCA.type Type of delivery for the user CA for TLS client verification. Options are `Secret` or `ConfigMap` (required for `mtls` connectionType)
        type: Secret
      ## @param spire-server.tornjak.config.tlsSecret Name of the secret containing server side key and certificate for TLS verification (required for `tls` or `mtls` connectionType)
      tlsSecret: tornjak-tls-secret
    ## @param spire-server.tornjak.image.pullPolicy Cluster pull policy
    ## @param spire-server.tornjak.image.registry Registry for Tornjak image
    ## @param spire-server.tornjak.image.repository Repository for Tornjak image
    ## @param spire-server.tornjak.image.tag Tag for Tornjak image
    ## @param spire-server.tornjak.image.version App version for Tornjak image
    ##
    image:
      pullPolicy: IfNotPresent
      registry: ghcr.io
      repository: spiffe/tornjak-backend
      tag: v1.2.2
      version: ""
    ## @param spire-server.tornjak.resources Resources request and limits for Tornjak image
    ## ref: https://kubernetes.io/docs/user-guide/compute-resources/
    ## Example:
    ## resources:
    ##   limits:
    ##     memory: 512Mi
    ##   requests:
    ##     memory: 256Mi
    ##     cpu: 250m
    ##
    resources: {}
    ## @param spire-server.tornjak.service.annotations Annotations for the service
    ## @param spire-server.tornjak.service.ports.http Insecure port for tornjak service
    ## @param spire-server.tornjak.service.ports.https Secure port for tornjak service
    ## @param spire-server.tornjak.service.type Type of service resource
    ##
    service:
      annotations: {}
      ports:
        http: 10000
        https: 10443
      type: ClusterIP
    ## @param spire-server.tornjak.startupProbe.initialDelaySeconds Initial delay in seconds for pod startup probe
    ## @param spire-server.tornjak.startupProbe.periodSeconds Period in seconds for pod startup probe
    ## @param spire-server.tornjak.startupProbe.timeoutSeconds Timeout in seconds for pod startup probe
    ## @param spire-server.tornjak.startupProbe.successThreshold Success threshold for pod startup probe
    ## @param spire-server.tornjak.startupProbe.failureThreshold Failure threshold for pod startup probe
    ##
    startupProbe:
      initialDelaySeconds: 5
      periodSeconds: 10
      timeoutSeconds: 5
      successThreshold: 1
      failureThreshold: 3
  unsupportedBuiltInPlugins:
    ## @param spire-server.unsupportedBuiltInPlugins.keyManager [object] Configuration for key manager plugin
    keyManager: {}
    ## @param spire-server.unsupportedBuiltInPlugins.nodeAttestor [object] Configuration for node attestor plugin
    nodeAttestor: {}
    ## @param spire-server.unsupportedBuiltInPlugins.notifier [object] Configuration for notifier plugin
    notifier: {}
    ## @param spire-server.unsupportedBuiltInPlugins.upstreamAuthority [object] Configuration for upstream authority plugin
    upstreamAuthority: {}
  upstreamAuthority:
    certManager:
      ## @param spire-server.upstreamAuthority.certManager.enabled Flag to enable cert manager upstream authority
      enabled: false
      ## @param spire-server.upstreamAuthority.certManager.issuer_group Issuer group for cert manager
      issuer_group: cert-manager.io
      ## @param spire-server.upstreamAuthority.certManager.issuer_kind Issuer kind for cert manager
      issuer_kind: Issuer
      ## @param spire-server.upstreamAuthority.certManager.issuer_name Name of cert issuer
      issuer_name: ""
      ## @param spire-server.upstreamAuthority.certManager.kube_config_file K8s configuration to connect to API server
      kube_config_file: ""
      ## @param spire-server.upstreamAuthority.certManager.namespace Namespace for cert manager
      namespace: ""
      ## Ref: https://github.com/spiffe/spire/blob/v1.7.0/doc/plugin_server_upstreamauthority_cert_manager.md
      ca:
        ## @param spire-server.upstreamAuthority.certManager.ca.create Flag to enable cert manager upstream CA
        create: false
        ## @param spire-server.upstreamAuthority.certManager.ca.duration Duration
        duration: 87600h
        privateKey:
          ## @param spire-server.upstreamAuthority.certManager.ca.privateKey.algorithm issuer_kind Issuer kind for cert manager
          algorithm: ECDSA
          ## @param spire-server.upstreamAuthority.certManager.ca.privateKey.rotationPolicy Name of cert issuer
          rotationPolicy: ""
          ## @param spire-server.upstreamAuthority.certManager.ca.privateKey.size K8s configuration to connect to API server
          size: 256
        ## @param spire-server.upstreamAuthority.certManager.ca.renewBefore Namespace for cert manager
        renewBefore: ""
      rbac:
        ## @param spire-server.upstreamAuthority.certManager.rbac.create Flag for creation of cert manager RBAC role
        create: true
    disk:
      ## @param spire-server.upstreamAuthority.disk.enabled Flag for disk upstream authority plugin
      enabled: false
      secret:
        ## @param spire-server.upstreamAuthority.disk.secret.create Create secret to hold CA
        create: true
        ## @param spire-server.upstreamAuthority.disk.secret.name Name for secret
        ## Ref: https://github.com/spiffe/spire/blob/v1.7.0/doc/plugin_server_upstreamauthority_disk.md
        name: spiffe-upstream-ca
        data:
          ## @param spire-server.upstreamAuthority.disk.secret.data.bundle Data bundle for disk upstream authority
          bundle: ""
          ## @param spire-server.upstreamAuthority.disk.secret.data.certificate Certificate for disk upstream authority
          certificate: ""
          ## @param spire-server.upstreamAuthority.disk.secret.data.key Key for disk upstream authority
          key: ""
    awsPCA:
      ## @param spire-server.upstreamAuthority.awsPCA.enabled Flag to enable upstream authority plugin with AWS PCA
      enabled: false
      ## @param spire-server.upstreamAuthority.awsPCA.region AWS Region to use  
      region: ""
      ## @param spire-server.upstreamAuthority.awsPCA.endpoint [nullable] Endpoint as hostname or fully-qualified URI that overrides the default endpoint. See AWS SDK Config docs (https://docs.aws.amazon.com/sdk-for-go/api/aws/#Config) for more information
      endpoint: ""
      ## @param spire-server.upstreamAuthority.awsPCA.assumeRoleARN [nullable] ARN of an IAM role to assume
      assumeRoleARN: ""
      ## @param spire-server.upstreamAuthority.awsPCA.caSigningTemplateARN [nullable] ARN of the signing template to use for the server's CA. Defaults to a signing template for end-entity certificates only. See Using Templates (https://docs.aws.amazon.com/acm-pca/latest/userguide/UsingTemplates.html) for possible values
      caSigningTemplateARN: ""
      ## @param spire-server.upstreamAuthority.awsPCA.certificateAuthorityARN ARN of the "upstream" CA certificate
      certificateAuthorityARN: ""
      ## @param spire-server.upstreamAuthority.awsPCA.signingAlgorithm [nullable] Signing algorithm to use for the server's CA. Defaults to the CA's default. See Issue Certificate (https://docs.aws.amazon.com/cli/latest/reference/acm-pca/issue-certificate.html) for possible values
      signingAlgorithm: ""
      ## @param spire-server.upstreamAuthority.awsPCA.supplementalBundlePath [nullable] Path to a file containing PEM-encoded CA certificates that should be additionally included in the bundle
      supplementalBundlePath: ""
    spire:
      ## @param spire-server.upstreamAuthority.spire.enabled Flag for Spire upstream authority plugin
      enabled: false
      ## @param spire-server.upstreamAuthority.spire.upstreamDriver Driver for Spire as upstream CA
      upstreamDriver: ""
      ## Ref: https://github.com/spiffe/spire/blob/v1.7.0/doc/plugin_server_upstreamauthority_spire.md
      server:
        ## @param spire-server.upstreamAuthority.spire.server.address Address for Spire server
        address: ""
        ## @param spire-server.upstreamAuthority.spire.server.port Port for Spire server
        port: 8081
  keyManager:
    awsKMS:
      ## @param spire-server.keyManager.awsKMS.enabled Flag to enable AWS KMS as key manager
      enabled: false
      ## @param spire-server.keyManager.awsKMS.region Specify the region for AWS KMS
      region: ""
      ## @param spire-server.keyManager.awsKMS.accessKeyID Access key ID for the AWS account. It's recommended to use an IAM role instead. See [here](https://docs.aws.amazon.com/eks/latest/userguide/associate-service-account-role.html) to learn how to annotate your SPIRE Server Service Account to assume an IAM role
      accessKeyID: ""
      ## @param spire-server.keyManager.awsKMS.secretAccessKey Secret access key for the AWS account
      secretAccessKey: ""
      keyPolicy:
        ## @param spire-server.keyManager.awsKMS.keyPolicy.policy Key policy in JSON format
        policy: ""
        ## @param spire-server.keyManager.awsKMS.keyPolicy.existingConfigMap Name of a ConfigMap that has a `policy.json` file with the key policy in JSON format
        existingConfigMap: ""
    disk:
      ## @param spire-server.keyManager.disk.enabled Flag to enable keyManager on disk
      enabled: true
    memory:
      ## @param spire-server.keyManager.memory.enabled Flag to enable keyManager in memory
      enabled: false
  customPlugins:
    ## @param spire-server.customPlugins.keyManager [object] Configuration for key manager custom plugin
    keyManager: {}
    ## @param spire-server.customPlugins.nodeAttestor [object] Configuration for node attestor custom plugin
    nodeAttestor: {}
    ## @param spire-server.customPlugins.notifier [object] Configuration for notifier custom plugin
    notifier: {}
    ## @param spire-server.customPlugins.upstreamAuthority [object] Configuration for upstream authority custom plugin
    upstreamAuthority: {}

## @section Spire agent parameters
## Parameter values for Spire agent
##
spire-agent:
  ## @param spire-agent.enabled Flag to enable Spire agent
  enabled: true
  ## @param spire-agent.hostAliases [array] List of host aliases for Spire agent
  hostAliases: []
  ## @param spire-agent.upstream Flag for whether upstream agent is enabled
  upstream: false
  ## @param spire-agent.fullnameOverride Overrides the full name of Spire agent pods
  fullnameOverride: ""
  ## @param spire-agent.nameOverride Overrides the name of Spire agent pods
  nameOverride: agent
  ## @param spire-agent.namespaceOverride Overrides the namespace where Spire agent pods are installed
  namespaceOverride: ""
  ## @param spire-agent.clusterName Cluster name configured for Spire agents
  clusterName: example-cluster
  ## @param spire-agent.trustBundleURL URL for Spire agent trust bundle for federation
  trustBundleURL: ""
  ## @param spire-agent.trustBundleFormat If using trustBundleURL, what format is the url. Choices are "pem" and "spiffe"
  trustBundleFormat: pem
  ## @param spire-agent.trustDomain Domain name for Spire agent trust bundle
  trustDomain: example.org
  ## @param spire-agent.bundleConfigMap Config map name for Spire agent trust bundle
  bundleConfigMap: spire-bundle
  ## @param spire-agent.socketPath Path for Spire agent socket
  socketPath: /run/spire/agent-sockets/spire-agent.sock
  ## @param spire-agent.logLevel Log level set for Spire agents
  logLevel: info
  global:
    deleteHooks:
      ## @param spire-agent.global.deleteHooks.enabled Override flag for delete hooks
      enabled: true
    installAndUpgradeHooks:
      ## @param spire-agent.global.installAndUpgradeHooks.enabled Override flag for install and upgrade hooks
      enabled: true
    k8s:
      ## @param spire-agent.global.k8s.clusterDomain Cluster domain name configured for Spire agent
      clusterDomain: cluster.local
    spire:
      ## @param spire-agent.global.spire.bundleConfigMap Spire bundle config map for Spire agent
      bundleConfigMap: ""
      ## @param spire-agent.global.spire.clusterName The name of the k8s cluster for Spire agent
      clusterName: example-cluster
      image:
        ## @param spire-agent.global.spire.image.registry Image registry for Spire agent
        registry: ""
      ## @param spire-agent.global.spire.jwtIssuer JWT Issuer configured for Spire agent
      jwtIssuer: oidc-discovery.example.org
      ## @param spire-agent.global.spire.trustDomain Trust domain name configured for Spire agent
      trustDomain: example.org
      ## @param spire-agent.global.spire.upstreamServerAddress Upstream server address for Spire
      upstreamServerAddress: ""
  configMap:
    ## @param spire-agent.configMap.annotations
    annotations: {}
  ## @param spire-agent.initContainers Init container definitions for Spire agent pods
  ## Ref: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/
  ## Example:
  ## initContainers:
  ## - name: initialization-logic
  ##   image: cgr.dev/chainguard/bash:5.2.15
  ##   command: ['sh', '-c', 'echo "Intialization logic here..."']
  ##
  initContainers: []
  ## @param spire-agent.extraContainers Additional container definitions to run alongside Spire agent
  ## Ref: https://kubernetes.io/docs/concepts/containers/
  ## Example:
  ## extraContainers:
  ## - name: extra-container
  ##   image: cgr.dev/chainguard/bash:5.2.15
  ##   command: ['sh', '-c', 'echo "Additional container logic here..."']
  ##
  extraContainers: []
  ## @param spire-agent.extraVolumes Additional volumes to attach to Spire agent pods
  ## Ref: https://kubernetes.io/docs/concepts/storage/volumes/
  ## Example:
  ## extraVolumes:
  ## - name: extra-volume-1
  ##   emptyDir: {}
  ##
  extraVolumes: []
  ## @param spire-agent.extraVolumeMounts Additional volume mounts for Spire agent container
  ## Ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-volume-storage/
  ## Example:
  ## extraVolumeMounts:
  ## - name: extra-volume-mount-1
  ##   mountPath: /data/mount1
  ##   subPath: "path"
  ##
  extraVolumeMounts: []
  fsGroupFix:
    ## @param spire-agent.fsGroupFix.image.pullPolicy Image pull policy
    ## @param spire-agent.fsGroupFix.image.registry Registry for bash images to run fs group command
    ## @param spire-agent.fsGroupFix.image.repository Repository for the bash images to run fs group command
    ## @param spire-agent.fsGroupFix.image.tag Tag for bash images to run fs group command
    ## @param spire-agent.fsGroupFix.image.version App version for bash images to run fs group command
    ##
    image:
      pullPolicy: Always
      registry: cgr.dev
      repository: chainguard/bash
      tag: 5.2.15
      version: ""
    ## @param spire-agent.fsGroupFix.resources Resources request and limits for fs group command pod
    ## ref: https://kubernetes.io/docs/user-guide/compute-resources/
    ## Example:
    ## resources:
    ##   limits:
    ##     memory: 512Mi
    ##   requests:
    ##     memory: 256Mi
    ##     cpu: 250m
    ##
    resources: {}
  healthChecks:
    ## @param spire-agent.healthChecks.port Port for Spire agent pods health check
    port: 9980
  ## @param spire-agent.image.pullPolicy Image pull policy
  ## @param spire-agent.image.registry Registry for Spire agents
  ## @param spire-agent.image.repository Repository for Spire agents
  ## @param spire-agent.image.tag Tag for Spire agent images
  ## @param spire-agent.image.version App version for Spire agent images
  ##
  image:
    pullPolicy: IfNotPresent
    registry: ghcr.io
    repository: spiffe/spire-agent
    tag: ""
    version: ""
  ## @param spire-agent.imagePullSecrets Pull secrets for authenticated registries
  ## Example:
  ## imagePullSecrets:
  ##   - myRegistryPullSecret
  ##
  imagePullSecrets: []
  ## @param spire-agent.livenessProbe.initialDelaySeconds Initial delay in seconds for pod liveness probe
  ## @param spire-agent.livenessProbe.periodSeconds Health check period in seconds for pod liveness probe
  ##
  livenessProbe:
    initialDelaySeconds: 15
    periodSeconds: 60
  ## @param spire-agent.readinessProbe.initialDelaySeconds Initial delay in seconds for pod readiness probe
  ## @param spire-agent.readinessProbe.periodSeconds Health check period in seconds for pod readiness probe
  ##
  readinessProbe:
    initialDelaySeconds: 15
    periodSeconds: 60
  ## @param spire-agent.nodeSelector Nodeselector details for Spire agent pods
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#nodeselector
  ## Example:
  ## nodeSelector:
  ##   kubernetes.io/arch: amd64
  ##
  nodeSelector: {}
  ## @param spire-agent.podAnnotations Annotations to be added at a pod level
  ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
  ## Example:
  ## podAnnotations:
  ##   annotationName1: annotationValue1
  ##   annotationName2: annotationValue2
  ##
  podAnnotations: {}
  ## @param spire-agent.podSecurityContext Security contexts to be set at a pod level
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
  ## Example:
  ## podSecurityContext:
  ##   allowPrivilegeEscalation: false
  ##   seccompProfile:
  ##     type: RuntimeDefault:
  ##
  podSecurityContext: {}
  ## @param spire-agent.securityContext Security contexts to be set at a pod level
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
  ## Example:
  ## securityContext:
  ##   allowPrivilegeEscalation: false
  ##   seccompProfile:
  ##     type: RuntimeDefault:
  ##
  securityContext: {}
  ## @param spire-agent.priorityClassName Priority class name for pod
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/pod-priority-preemption/#pod-priority
  ##
  priorityClassName: ""
  ## @param spire-agent.resources Resources request and limits for Spire agent
  ## ref: https://kubernetes.io/docs/user-guide/compute-resources/
  ## Example:
  ## resources:
  ##   limits:
  ##     memory: 512Mi
  ##   requests:
  ##     memory: 256Mi
  ##     cpu: 250m
  ##
  resources: {}
  ## @param spire-agent.server.address Address override for spire server
  ## @param spire-agent.server.namespaceOverride Namespace override for Spire server
  ## @param spire-agent.server.port Port for Spire server
  ##
  server:
    address: ""
    namespaceOverride: ""
    port: 8081
  ## @param spire-agent.serviceAccount.create Flag for service account creation
  ## @param spire-agent.serviceAccount.name Name of service account for CSI driver
  ##
  serviceAccount:
    create: true
    name: ""
    ## @param spire-agent.serviceAccount.annotations Annotations to be added to service account
    ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
    ## Example:
    ## annotations:
    ##   annotationName1: annotationValue1
    ##   annotationName2: annotationValue2
    ##
    annotations: {}
  telemetry:
    prometheus:
      ## @param spire-agent.telemetry.prometheus.enabled Flag to enable prometheus monitoring
      enabled: false
      ## @param spire-agent.telemetry.prometheus.port Port for metrics endpoints
      port: 9988
      podMonitor:
        ## @param spire-agent.telemetry.prometheus.podMonitor.enabled Flag for enabling podMonitor
        enabled: false
        ## @param spire-agent.telemetry.prometheus.podMonitor.namespace Namespace for podMonitor
        namespace: ""
        ## @param spire-agent.telemetry.prometheus.podMonitor.labels Labels for podMonitor
        ## Ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
        ## Example:
        ## labels:
        ##   app: spire-agent
        ##
        labels: {}
  ## @param spire-agent.tolerations Specifies pod tolerations
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/
  ## Example:
  ##   tolerations:
  ##     - key: "example-key"
  ##       operator: "Exists"
  ##       effect: "NoSchedule":
  ##
  tolerations: []
  waitForIt:
    ## @param spire-agent.waitForIt.image.pullPolicy Cluster pull policy for image used to wait for Spire server to come up
    ## @param spire-agent.waitForIt.image.registry Registry for image used to wait for Spire server to come up
    ## @param spire-agent.waitForIt.image.repository Repository for image used to wait for Spire server to come up
    ## @param spire-agent.waitForIt.image.tag Tag for image used to wait for Spire server to come up
    ## @param spire-agent.waitForIt.image.version App version for image used to wait for Spire server to come up
    ##
    image:
      pullPolicy: IfNotPresent
      registry: cgr.dev
      repository: chainguard/wait-for-it
      tag: latest-20230517
      version: ""
    ## @param spire-agent.waitForIt.resources Resources request and limits for container used to wait for Spire server to come up
    ## ref: https://kubernetes.io/docs/user-guide/compute-resources/
    ## Example:
    ## resources:
    ##   limits:
    ##     memory: 512Mi
    ##   requests:
    ##     memory: 256Mi
    ##     cpu: 250m
    ##
    resources: {}
  workloadAttestors:
    k8s:
      ## @param spire-agent.workloadAttestors.k8s.disableContainerSelectors Configure k8s workload attestor to disable container selectors
      disableContainerSelectors: false
      ## @param spire-agent.workloadAttestors.k8s.skipKubeletVerification Configure k8s workload attestor to skip kubelet cert verification
      skipKubeletVerification: true
    unix:
      ## @param spire-agent.workloadAttestors.unix.enabled Flag to enable unix workload attestor
      enabled: false

## @section SPIFFE CSI Driver parameters
## Parameter values for spiffe-csi-driver
##
spiffe-csi-driver:
  ## @param spiffe-csi-driver.enabled Flag to enable spiffe-csi-driver for the cluster
  enabled: true
  ## @param spiffe-csi-driver.agentSocketPath The path where Spire agent socket is mounted
  agentSocketPath: /run/spire/agent-sockets/spire-agent.sock
  ## @param spiffe-csi-driver.fullnameOverride Overrides the full name of CSI driver pods
  fullnameOverride: ""
  ## @param spiffe-csi-driver.nameOverride Overrides the name of CSI driver pods
  nameOverride: ""
  ## @param spiffe-csi-driver.namespaceOverride Overrides the namespace where CSI driver pods are installed
  namespaceOverride: ""
  ## @param spiffe-csi-driver.image.pullPolicy Cluster pull policy
  ## @param spiffe-csi-driver.image.registry Registry for Spire CSI driver images
  ## @param spiffe-csi-driver.image.repository Repository for the Spire CSI driver image
  ## @param spiffe-csi-driver.image.tag Tag for Spire CSI driver image
  ## @param spiffe-csi-driver.image.version App version for Spire CSI Driver image
  ## 
  image:
    pullPolicy: IfNotPresent
    registry: ghcr.io
    repository: spiffe/spiffe-csi-driver
    tag: ""
    version: ""
  ## @param spiffe-csi-driver.imagePullSecrets Pull secrets for authenticated registries
  ## Example:
  ## imagePullSecrets:
  ##   - myRegistryPullSecret
  ## 
  imagePullSecrets: []
  global:
    deleteHooks:
      ## @param spiffe-csi-driver.global.deleteHooks.enabled Override flag for delete hooks
      enabled: true
    installAndUpgradeHooks:
      ## @param spiffe-csi-driver.global.installAndUpgradeHooks.enabled Override flag for install and upgrade hooks
      enabled: true
    k8s:
      ## @param spiffe-csi-driver.global.k8s.clusterDomain Local domain for cluster
      clusterDomain: cluster.local
    spire:
      ## @param spiffe-csi-driver.global.spire.bundleConfigMap Name of configmap with trust bundle for Spire
      bundleConfigMap: ""
      ## @param spiffe-csi-driver.global.spire.clusterName Cluster name
      clusterName: example-cluster
      image:
        ## @param spiffe-csi-driver.global.spire.image.registry Registry where spire image is stored
        registry: ""
      ## @param spiffe-csi-driver.global.spire.jwtIssuer Issuer for JWT tokens
      jwtIssuer: oidc-discovery.example.org
      ## @param spiffe-csi-driver.global.spire.trustDomain Spire trustdomain
      trustDomain: example.org
      ## @param spiffe-csi-driver.global.spire.upstreamServerAddress Server address for upstream Spire instance 
      upstreamServerAddress: ""
  healthChecks:
    ## @param spiffe-csi-driver.healthChecks.port Port for Spire CSI driver image health check
    port: 9809
  ## @param spiffe-csi-driver.kubeletPath Path to Kubelet config in the cluster node
  kubeletPath: /var/lib/kubelet
  ## @param spiffe-csi-driver.livenessProbe.initialDelaySeconds Initial delay in seconds for pod liveness probe
  ## @param spiffe-csi-driver.livenessProbe.timeoutSeconds Timeout in seconds for pod liveness probe
  ## 
  livenessProbe:
    initialDelaySeconds: 5
    timeoutSeconds: 5
  nodeDriverRegistrar:
    ## @param spiffe-csi-driver.nodeDriverRegistrar.image.pullPolicy Cluster pull policy for Node driver registrar image
    ## @param spiffe-csi-driver.nodeDriverRegistrar.image.registry Registry for Node driver registrar image
    ## @param spiffe-csi-driver.nodeDriverRegistrar.image.repository Repository for Node driver registrar image
    ## @param spiffe-csi-driver.nodeDriverRegistrar.image.tag Tag for Node driver registrar image
    ## @param spiffe-csi-driver.nodeDriverRegistrar.image.version App version for Node driver registrar image
    ## 
    image:
      pullPolicy: IfNotPresent
      registry: registry.k8s.io
      repository: sig-storage/csi-node-driver-registrar
      tag: v2.8.0
      version: ""
    ## @param spiffe-csi-driver.nodeDriverRegistrar.resources Resources request and limits for Node driver registrar
    ## ref: https://kubernetes.io/docs/user-guide/compute-resources/
    ## Example:
    ## resources:
    ##   limits:
    ##     memory: 512Mi
    ##   requests:
    ##     memory: 256Mi
    ##     cpu: 250m
    ## 
    resources: {}
  ## @param spiffe-csi-driver.nodeSelector Nodeselector details for Spiffe CSI driver pods
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#nodeselector
  ## Example:
  ## nodeSelector:
  ##   kubernetes.io/arch: amd64
  ##
  nodeSelector: {}
  ## @param spiffe-csi-driver.pluginName Plugin name
  ##
  pluginName: csi.spiffe.io
  ## @param spiffe-csi-driver.podAnnotations Annotations to be added at a pod level
  ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
  ## Example:
  ## podAnnotations:
  ##   annotationName1: annotationValue1
  ##   annotationName2: annotationValue2
  ##
  podAnnotations: {}
  ## @param spiffe-csi-driver.podSecurityContext Security contexts to be set at a pod level
  ## Note: #TODO: confirm if this will override security context values below
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
  ## Example:
  ## podSecurityContext:
  ##   allowPrivilegeEscalation: false
  ##   seccompProfile:
  ##     type: RuntimeDefault:
  ##
  podSecurityContext: {}
  ## @extra spiffe-csi-driver.securityContext Security contexts to be set at container level
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
  ## Example:
  ## securityContext:
  ##   allowPrivilegeEscalation: false
  ##   seccompProfile:
  ##     type: RuntimeDefault:
  ##
  securityContext:
    ## @param spiffe-csi-driver.securityContext.privileged Flag to set privileged container status
    privileged: true
    ## @param spiffe-csi-driver.securityContext.readOnlyRootFilesystem Flag for marking container filesystem readonly
    readOnlyRootFilesystem: true
  ## @param spiffe-csi-driver.priorityClassName Priority class name for pod
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/pod-priority-preemption/#pod-priority
  ##
  priorityClassName: ""
  ## @param spiffe-csi-driver.resources Resource requests and limits for CSI driver
  ## ref: https://kubernetes.io/docs/user-guide/compute-resources/
  ## Example:
  ## resources:
  ##   limits:
  ##     memory: 512Mi
  ##   requests:
  ##     memory: 256Mi
  ##     cpu: 250m
  ## 
  resources: {}
  serviceAccount:
    ## @param spiffe-csi-driver.serviceAccount.create Flag for service account creation
    create: true
    ## @param spiffe-csi-driver.serviceAccount.name Name of service account for CSI driver
    name: ""
    ## @param spiffe-csi-driver.serviceAccount.annotations Annotations to be added to service account
    ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
    ## Example:
    ## annotations:
    ##   annotationName1: annotationValue1
    ##   annotationName2: annotationValue2
    ##
    annotations: {}
  ## @param spiffe-csi-driver.tolerations Specifies pod tolerations
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/
  ## Example:
  ##   tolerations:
  ##     - key: "example-key"
  ##       operator: "Exists"
  ##       effect: "NoSchedule":
  ## 
  tolerations: []

## @section SPIFFE oidc discovery provider parameters
## Parameter values for spiffe-oidc-discovery-provider
##
spiffe-oidc-discovery-provider:
  deleteHook:
    ## @param spiffe-oidc-discovery-provider.deleteHook.enabled Override flag for delete hook
    enabled: true
  ## @param spiffe-oidc-discovery-provider.enabled Flag to enable spiffe-oidc-discovery-provider for the cluster
  enabled: false
  ## @param spiffe-oidc-discovery-provider.agentSocketName filename of the agent socket
  agentSocketName: spire-agent.sock
  ## @param spiffe-oidc-discovery-provider.fullnameOverride Overrides the full name of spiffe-oidc-discovery-provider pods
  fullnameOverride: ""
  ## @param spiffe-oidc-discovery-provider.nameOverride Overrides the name of spiffe-oidc-discovery-provider pods
  nameOverride: ""
  ## @param spiffe-oidc-discovery-provider.namespaceOverride Overrides the namespace where spiffe-oidc-discovery-provider pods are installed
  namespaceOverride: ""
  ## @param spiffe-oidc-discovery-provider.clusterDomain Cluster domain name configured for spiffe-oidc-discovery-provider
  clusterDomain: cluster.local
  ## @param spiffe-oidc-discovery-provider.trustDomain Trust domain name configured for spiffe-oidc-discovery-provider
  trustDomain: example.org
  ## @param spiffe-oidc-discovery-provider.jwtIssuer JWT issuer name configured for spiffe-oidc-discovery-provider
  jwtIssuer: oidc-discovery.example.org
  ## @param spiffe-oidc-discovery-provider.replicaCount Number of replicas, autoscaling values will override
  replicaCount: 1
  global:
    deleteHooks:
      ## @param spiffe-oidc-discovery-provider.global.deleteHooks.enabled Override flag for delete hooks      
      enabled: true
    installAndUpgradeHooks:
      ## @param spiffe-oidc-discovery-provider.global.installAndUpgradeHooks.enabled Override flag for install and upgrade hooks
      enabled: true
    k8s:
      ## @param spiffe-oidc-discovery-provider.global.k8s.clusterDomain Cluster domain name configured for spiffe-oidc-discovery-provider
      clusterDomain: cluster.local
    spire:
      ## @param spiffe-oidc-discovery-provider.global.spire.bundleConfigMap Spire bundle config map for spiffe-oidc-discovery-provider
      bundleConfigMap: ""
      ## @param spiffe-oidc-discovery-provider.global.spire.clusterName The name of the k8s cluster for spiffe-oidc-discovery-provider
      clusterName: example-cluster
      image:
        ## @param spiffe-oidc-discovery-provider.global.spire.image.registry Image registry for spiffe-oidc-discovery-provider
        registry: ""
      ## @param spiffe-oidc-discovery-provider.global.spire.jwtIssuer JWT Issuer configured for spiffe-oidc-discovery-provider
      jwtIssuer: oidc-discovery.example.org
      ## @param spiffe-oidc-discovery-provider.global.spire.trustDomain Trust domain name configured for spiffe-oidc-discovery-provider
      trustDomain: example.org
      ## @param spiffe-oidc-discovery-provider.global.spire.upstreamServerAddress Address for upstream Spire instance
      upstreamServerAddress: ""
  config:
    ## @param spiffe-oidc-discovery-provider.config.logLevel Log level for spiffe-oidc-discovery-provider
    logLevel: info
    ## @param spiffe-oidc-discovery-provider.config.additionalDomains Additional domains configured for spiffe-oidc-discovery-provider
    additionalDomains:
    - localhost
    acme:
      ## @param spiffe-oidc-discovery-provider.config.acme.cacheDir Letsenctrypt plugin cache directory
      cacheDir: /run/spire
      ## @param spiffe-oidc-discovery-provider.config.acme.directoryUrl Letsencrypt plugin directory URL
      directoryUrl: https://acme-v02.api.letsencrypt.org/directory
      ## @param spiffe-oidc-discovery-provider.config.acme.emailAddress Letsencrypt plugin email address
      emailAddress: letsencrypt@example.org
      ## @param spiffe-oidc-discovery-provider.config.acme.tosAccepted Letsencrypt TOS acceptance flag
      tosAccepted: false
  configMap:
    ## @param spiffe-oidc-discovery-provider.configMap.annotations
    annotations: {}
  ## @param spiffe-oidc-discovery-provider.image.pullPolicy Cluster pull policy
  ## @param spiffe-oidc-discovery-provider.image.registry Registry for spiffe-oidc-discovery-provider image
  ## @param spiffe-oidc-discovery-provider.image.repository Repository for spiffe-oidc-discovery-provider image
  ## @param spiffe-oidc-discovery-provider.image.tag Tag for spiffe-oidc-discovery-provider image
  ## @param spiffe-oidc-discovery-provider.image.version App version for spiffe-oidc-discovery-provider
  ## 
  image:
    pullPolicy: IfNotPresent
    registry: ghcr.io
    repository: spiffe/oidc-discovery-provider
    tag: ""
    version: ""
  ## @param spiffe-oidc-discovery-provider.imagePullSecrets Pull secrets for authenticated registries
  ## Example:
  ## imagePullSecrets:
  ##   - myRegistryPullSecret
  ## 
  imagePullSecrets: []
  ## @param spiffe-oidc-discovery-provider.service.annotations Annotations for service object
  ## @param spiffe-oidc-discovery-provider.service.port Service port
  ## @param spiffe-oidc-discovery-provider.service.type Service type
  ## 
  service:
    annotations: {}
    port: 80
    type: ClusterIP
  ## @param spiffe-oidc-discovery-provider.ingress.enabled Enable ingress for spiffe-oidc-discovery-provider
  ## @param spiffe-oidc-discovery-provider.ingress.className Ingress class name
  ## @param spiffe-oidc-discovery-provider.ingress.annotations Annotations for ingress object
  ## 
  ingress:
    enabled: false
    className: ""
    annotations: {}
    ## @param spiffe-oidc-discovery-provider.ingress.hosts [array] List of hosts configured for ingress with path
    ## Ref: https://kubernetes.io/docs/concepts/services-networking/ingress/#ingress-rules
    ## Example:
    ## hosts:
    ## - host: oidc-discovery.example.org
    ##  paths:
    ##  - path: /
    ##    pathType: Prefix
    ## 
    hosts:
    - host: oidc-discovery.example.org
      paths:
      - path: /
        pathType: Prefix
    ## @param spiffe-oidc-discovery-provider.ingress.tls List of tls secrets for ingress
    ## Ref: https://kubernetes.io/docs/concepts/services-networking/ingress/#tls
    ## tls:
    ## - hosts:
    ##   - oidc-discovery.example.org
    ##   secretName: tls-secret
    ## 
    tls: []
  insecureScheme:
    ## @param spiffe-oidc-discovery-provider.insecureScheme.enabled Flag to enable insecure nginx install
    enabled: false
    nginx:
      ## @param spiffe-oidc-discovery-provider.insecureScheme.nginx.image.pullPolicy Image pull policy
      ## @param spiffe-oidc-discovery-provider.insecureScheme.nginx.image.registry Registry for nginx image
      ## @param spiffe-oidc-discovery-provider.insecureScheme.nginx.image.repository Repository for nginx image
      ## @param spiffe-oidc-discovery-provider.insecureScheme.nginx.image.tag Tag for nginx image
      ## @param spiffe-oidc-discovery-provider.insecureScheme.nginx.image.version App version for nginx
      ## 
      image:
        pullPolicy: IfNotPresent
        registry: docker.io
        repository: nginxinc/nginx-unprivileged
        tag: 1.24.0-alpine
        version: ""
      ## @param spiffe-oidc-discovery-provider.insecureScheme.nginx.resources Resources request and limits for nginx
      ## ref: https://kubernetes.io/docs/user-guide/compute-resources/
      ## Example:
      ## resources:
      ##   limits:
      ##     memory: 512Mi
      ##   requests:
      ##     memory: 256Mi
      ##     cpu: 250m
      ## 
      resources: {}
  ## @param spiffe-oidc-discovery-provider.livenessProbe.initialDelaySeconds Initial delay in seconds for pod liveness probe
  ## @param spiffe-oidc-discovery-provider.livenessProbe.periodSeconds Period in seconds for pod liveness probe
  ## 
  livenessProbe:
    initialDelaySeconds: 5
    periodSeconds: 5
  ## @param spiffe-oidc-discovery-provider.readinessProbe.initialDelaySeconds Initial delay in seconds for pod liveness probe
  ## @param spiffe-oidc-discovery-provider.readinessProbe.periodSeconds Period in seconds for pod liveness probe
  ## 
  readinessProbe:
    initialDelaySeconds: 5
    periodSeconds: 5
  ## @param spiffe-oidc-discovery-provider.autoscaling.enabled Enable horizontal pod autoscaling
  ## @param spiffe-oidc-discovery-provider.autoscaling.maxReplicas Maximum replicas for autoscaling
  ## @param spiffe-oidc-discovery-provider.autoscaling.minReplicas Minimum replicas for autoscaling
  ## @param spiffe-oidc-discovery-provider.autoscaling.targetCPUUtilizationPercentage Target CPU utilization
  ## @param spiffe-oidc-discovery-provider.autoscaling.targetMemoryUtilizationPercentage Target memory utilization
  ## Ref: https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/
  ## 
  autoscaling:
    enabled: false
    maxReplicas: 5
    minReplicas: 1
    targetCPUUtilizationPercentage: 80
    targetMemoryUtilizationPercentage: 80
  ## @param spiffe-oidc-discovery-provider.annotations Annotations for SPIFFE OIDC discovery provider pods
  annotations: {}
  ## @param spiffe-oidc-discovery-provider.nodeSelector Nodeselector details for spiffe-oidc-discovery-provider pods
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#nodeselector
  ## Example:
  ## nodeSelector:
  ##   kubernetes.io/arch: amd64
  ##
  nodeSelector: {}
  ## @param spiffe-oidc-discovery-provider.affinity Node affinity for spiffe-oidc-discovery-provider pods
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/assign-pods-nodes-using-node-affinity/#schedule-a-pod-using-required-node-affinity
  ## Example:
  ## affinity:
  ##   nodeAffinity:
  ##     requiredDuringSchedulingIgnoredDuringExecution:
  ##       nodeSelectorTerms:
  ##       - matchExpressions:
  ##         - key: nodeType
  ##           operator: In
  ##           values:
  ##           - spiffeNode:
  affinity: {}
  ## @param spiffe-oidc-discovery-provider.podAnnotations Annotations to be added at a pod level
  ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
  ## Example:
  ## podAnnotations:
  ##   annotationName1: annotationValue1
  ##   annotationName2: annotationValue2
  ##
  podAnnotations: {}
  ## @param spiffe-oidc-discovery-provider.podSecurityContext Security contexts to be set at a pod level
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
  ## Example:
  ## podSecurityContext:
  ##   allowPrivilegeEscalation: false
  ##   seccompProfile:
  ##     type: RuntimeDefault:
  ##
  podSecurityContext: {}
  ## @param spiffe-oidc-discovery-provider.securityContext Security contexts to be set at a pod level
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
  ## Example:
  ## securityContext:
  ##   allowPrivilegeEscalation: false
  ##   seccompProfile:
  ##     type: RuntimeDefault:
  ##
  securityContext: {}
  ## @param spiffe-oidc-discovery-provider.resources Resources request and limits for Node driver registrar
  ## ref: https://kubernetes.io/docs/user-guide/compute-resources/
  ## Example:
  ## resources:
  ##   limits:
  ##     memory: 512Mi
  ##   requests:
  ##     memory: 256Mi
  ##     cpu: 250m
  ## 
  resources: {}
  ## @param spiffe-oidc-discovery-provider.serviceAccount.create Flag for service account creation
  ## @param spiffe-oidc-discovery-provider.serviceAccount.name Name of service account for OIDC provider
  ##
  serviceAccount:
    create: true
    name: ""
    ## @param spiffe-oidc-discovery-provider.serviceAccount.annotations Annotations to be added to service account
    ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
    ## Example:
    ## annotations:
    ##   annotationName1: annotationValue1
    ##   annotationName2: annotationValue2
    ##
    annotations: {}
  telemetry:
    prometheus:
      ## @param spiffe-oidc-discovery-provider.telemetry.prometheus.enabled Flag to enable prometheus monitoring
      enabled: false
      ## @param spiffe-oidc-discovery-provider.telemetry.prometheus.port Port for metrics endpoints 
      port: 9988
      nginxExporter:
        ## @param spiffe-oidc-discovery-provider.telemetry.prometheus.nginxExporter.image.pullPolicy Image pull policy
        ## @param spiffe-oidc-discovery-provider.telemetry.prometheus.nginxExporter.image.registry Registry for nginx exporter images
        ## @param spiffe-oidc-discovery-provider.telemetry.prometheus.nginxExporter.image.repository Repository for the nginx exporter image
        ## @param spiffe-oidc-discovery-provider.telemetry.prometheus.nginxExporter.image.tag Tag for nginx exporter image
        ## @param spiffe-oidc-discovery-provider.telemetry.prometheus.nginxExporter.image.version App version for nginx exporter image
        ## 
        image:
          pullPolicy: IfNotPresent
          registry: docker.io
          repository: nginx/nginx-prometheus-exporter
          tag: 0.11.0
          version: ""
        ## @param spiffe-oidc-discovery-provider.telemetry.prometheus.nginxExporter.resources Resources request and limits for Node driver registrar
        ## ref: https://kubernetes.io/docs/user-guide/compute-resources/
        ## Example:
        ## resources:
        ##   limits:
        ##     memory: 512Mi
        ##   requests:
        ##     memory: 256Mi
        ##     cpu: 250m
        ## 
        resources: {}
      podMonitor:
        ## @param spiffe-oidc-discovery-provider.telemetry.prometheus.podMonitor.enabled Flag for enabling podMonitor
        enabled: false
        ## @param spiffe-oidc-discovery-provider.telemetry.prometheus.podMonitor.namespace Namespace for podMonitor
        namespace: ""
        ## @param spiffe-oidc-discovery-provider.telemetry.prometheus.podMonitor.labels Labels for podMonitor
        ## Ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
        ## Example:
        ## labels:
        ##   app: spiffe-oidc-discovery-provider
        ## 
        labels: {}
  tests:
    agent:
      ## @param spiffe-oidc-discovery-provider.tests.agent.image.pullPolicy Cluster pull policy
      ## @param spiffe-oidc-discovery-provider.tests.agent.image.registry Registry for Spire controller manager images
      ## @param spiffe-oidc-discovery-provider.tests.agent.image.repository Repository for the Spire controller manager image
      ## @param spiffe-oidc-discovery-provider.tests.agent.image.tag Tag for Spire controller manager image
      ## @param spiffe-oidc-discovery-provider.tests.agent.image.version App version for Spire controller manager image
      ##
      image:
        pullPolicy: IfNotPresent
        registry: ghcr.io
        repository: spiffe/spire-agent
        tag: ""
        version: ""
    busybox:
      ## @param spiffe-oidc-discovery-provider.tests.busybox.image.pullPolicy Cluster pull policy
      ## @param spiffe-oidc-discovery-provider.tests.busybox.image.registry Registry for Spire controller manager images
      ## @param spiffe-oidc-discovery-provider.tests.busybox.image.repository Repository for the Spire controller manager image
      ## @param spiffe-oidc-discovery-provider.tests.busybox.image.tag Tag for Spire controller manager image
      ## @param spiffe-oidc-discovery-provider.tests.busybox.image.version App version for Spire controller manager image
      ##
      image:
        pullPolicy: IfNotPresent
        registry: ""
        repository: busybox
        tag: uclibc@sha256:3e516f71d8801b0ce6c3f8f8e4f11093ec04e168177a90f1da4498014ee06b6b
        version: ""
    ## @param spiffe-oidc-discovery-provider.tests.hostAliases [array] List of host aliases for testing
    hostAliases: []
    tls:
      ## @param spiffe-oidc-discovery-provider.tests.tls.enabled Flag for enabling tls for testing
      enabled: false
      ## @param spiffe-oidc-discovery-provider.tests.tls.customCA CustomCA for testing with tls
      customCA: ""
    bash:
      ## @param spiffe-oidc-discovery-provider.tests.bash.image.pullPolicy Image pull policy
      ## @param spiffe-oidc-discovery-provider.tests.bash.image.registry Registry for bash images
      ## @param spiffe-oidc-discovery-provider.tests.bash.image.repository Repository for the bash image
      ## @param spiffe-oidc-discovery-provider.tests.bash.image.tag Tag for bash image
      ## @param spiffe-oidc-discovery-provider.tests.bash.image.version App version for bash image
      ## 
      image:
        pullPolicy: IfNotPresent
        registry: cgr.dev
        repository: chainguard/bash
        tag: 5.2.15
        version: ""
    toolkit:
      ## @param spiffe-oidc-discovery-provider.tests.toolkit.image.pullPolicy Image pull policy
      ## @param spiffe-oidc-discovery-provider.tests.toolkit.image.registry Registry for bash images
      ## @param spiffe-oidc-discovery-provider.tests.toolkit.image.repository Repository for the bash image
      ## @param spiffe-oidc-discovery-provider.tests.toolkit.image.tag Tag for bash image
      ## @param spiffe-oidc-discovery-provider.tests.toolkit.image.version App version for bash image
      ## 
      image:
        pullPolicy: IfNotPresent
        registry: cgr.dev
        repository: chainguard/slim-toolkit-debug
        tag: latest@sha256:d717d0a2c88518f8e36d9cfe1571639a40617e8c4291e34876d46bdeefb1ab5a
        version: ""
  ## @param spiffe-oidc-discovery-provider.tolerations Specifies pod tolerations
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/
  ## Example:
  ##   tolerations:
  ##     - key: "example-key"
  ##       operator: "Exists"
  ##       effect: "NoSchedule":
  ## 
  tolerations: []
  tools:
    kubectl:
      ## @param spiffe-oidc-discovery-provider.tools.kubectl.image.pullPolicy Image pull policy
      ## @param spiffe-oidc-discovery-provider.tools.kubectl.image.registry Registry for kubectl images
      ## @param spiffe-oidc-discovery-provider.tools.kubectl.image.repository Repository for the kubectl image
      ## @param spiffe-oidc-discovery-provider.tools.kubectl.image.tag Tag for kubectl image
      ## @param spiffe-oidc-discovery-provider.tools.kubectl.image.version App version for kubectl image
      ## 
      image:
        pullPolicy: IfNotPresent
        registry: docker.io
        repository: rancher/kubectl
        tag: ""
        version: ""

## @section Tornjak frontend parameters
## Parameter values for Tornjak frontend
##
tornjak-frontend:
  ## @param tornjak-frontend.enabled Flag to enable Tronjak frontend
  enabled: false
  ## @param tornjak-frontend.fullnameOverride Overrides the full name of Tornjak frontend pods
  fullnameOverride: ""
  ## @param tornjak-frontend.nameOverride Overrides the name of Tornjak frontend pods
  nameOverride: ""
  ## @param tornjak-frontend.namespaceOverride Overrides the namespace where Tornjak frontend pods are installed
  namespaceOverride: ""
  ## @param tornjak-frontend.apiServerURL API server URL for Tornjak server
  apiServerURL: http://localhost:10000/
  ## @param tornjak-frontend.affinity Node affinity for Tornjak pods
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/assign-pods-nodes-using-node-affinity/#schedule-a-pod-using-required-node-affinity
  ## Example:
  ## affinity:
  ##   nodeAffinity:
  ##     requiredDuringSchedulingIgnoredDuringExecution:
  ##       nodeSelectorTerms:
  ##       - matchExpressions:
  ##         - key: nodeType
  ##           operator: In
  ##           values:
  ##           - spiffeNode:
  affinity: {}
  global:
    deleteHooks:
      ## @param tornjak-frontend.global.deleteHooks.enabled Override flag for delete hooks
      enabled: true
    installAndUpgradeHooks:
      ## @param tornjak-frontend.global.installAndUpgradeHooks.enabled Override flag for install and upgrade hooks
      enabled: true
    k8s:
      ## @param tornjak-frontend.global.k8s.clusterDomain Cluster domain name configured for Tornjak frontend
      clusterDomain: cluster.local
    spire:
      ## @param tornjak-frontend.global.spire.bundleConfigMap Spire bundle config map for Tornjak frontend
      bundleConfigMap: ""
      ## @param tornjak-frontend.global.spire.clusterName The name of the k8s cluster for Tornjak frontend
      clusterName: example-cluster
      image:
        ## @param tornjak-frontend.global.spire.image.registry Image registry for Tornjak frontend
        registry: ""
      ## @param tornjak-frontend.global.spire.jwtIssuer JWT Issuer configured for Tornjak frontend
      jwtIssuer: oidc-discovery.example.org
      ## @param tornjak-frontend.global.spire.trustDomain Trust domain name configured for Tornjak frontend
      trustDomain: example.org
      ## @param tornjak-frontend.global.spire.upstreamServerAddress Upstream Spire server address
      upstreamServerAddress: ""
  ## @param tornjak-frontend.image.pullPolicy Cluster pull policy
  ## @param tornjak-frontend.image.registry Registry for Tornjak frontend image
  ## @param tornjak-frontend.image.repository Repository for Tornjak frontend image
  ## @param tornjak-frontend.image.tag Tag for Tornjak frontend image
  ## @param tornjak-frontend.image.version App version for Tornjak frontend image
  ## 
  image:
    pullPolicy: IfNotPresent
    registry: ghcr.io
    repository: spiffe/tornjak-frontend
    tag: ""
    version: ""
  ## @param tornjak-frontend.imagePullSecrets Pull secrets for authenticated registries
  ## Example:
  ## imagePullSecrets:
  ##   - myRegistryPullSecret
  ## 
  imagePullSecrets: []
  ## @param tornjak-frontend.labels Labels for Tornjak frontend
  ## Ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
  ## Example:
  ## labels:
  ##   app: tornjak-frontend
  ## 
  labels: {}
  ## @extra tornjak-frontend.nodeSelector Nodeselector details for Tornjak frontend pods
  ## @skip tornjak-frontend.nodeSelector.kubernetes.io/arch
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#nodeselector
  ## Example:
  ## nodeSelector:
  ##   kubernetes.io/arch: amd64
  ##
  nodeSelector:
    kubernetes.io/arch: amd64
  ## @param tornjak-frontend.podSecurityContext Security contexts to be set at a pod level
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
  ## Example:
  ## podSecurityContext:
  ##   allowPrivilegeEscalation: false 
  ##   seccompProfile:
  ##     type: RuntimeDefault:
  ##
  podSecurityContext: {}
  ## @param tornjak-frontend.securityContext Security contexts to be set at a container level
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
  ## Example:
  ## securityContext:
  ##   allowPrivilegeEscalation: false
  ##   seccompProfile:
  ##     type: RuntimeDefault:
  ##
  securityContext: {}
  ## @param tornjak-frontend.service.annotations Annotations for service object
  ## @param tornjak-frontend.service.port Service port
  ## @param tornjak-frontend.service.type Service type
  ## 
  service:
    annotations: {}
    port: 3000
    type: ClusterIP
  ## @param tornjak-frontend.serviceAccount.create Flag for service account creation
  ## @param tornjak-frontend.serviceAccount.name Name of service account for Tornjak frontend
  ##
  serviceAccount:
    create: true
    name: ""
    ## @param tornjak-frontend.serviceAccount.annotations Annotations to be added to service account
    ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
    ## Example:
    ## annotations:
    ##   annotationName1: annotationValue1
    ##   annotationName2: annotationValue2
    ##
    annotations: {}
  spireHealthCheck:
    ## @param tornjak-frontend.spireHealthCheck.enabled Flag to enable Spire server URL health check
    enabled: true
  ## @param tornjak-frontend.startupProbe.enabled Flag for enabling pod startup probe
  ## @param tornjak-frontend.startupProbe.initialDelaySeconds Initial delay in seconds for pod startup probe
  ## @param tornjak-frontend.startupProbe.periodSeconds Period in seconds for pod startup probe
  ## @param tornjak-frontend.startupProbe.timeoutSeconds Timeout in seconds for pod startup probe
  ## @param tornjak-frontend.startupProbe.successThreshold Success threshold for pod startup probe
  ## @param tornjak-frontend.startupProbe.failureThreshold Failure threshold for pod startup probe
  ## 
  startupProbe:
    enabled: true
    initialDelaySeconds: 5
    periodSeconds: 10
    timeoutSeconds: 5
    successThreshold: 1
    failureThreshold: 6
  tests:
    bash:
      ## @param tornjak-frontend.tests.bash.image.pullPolicy Cluster pull policy
      ## @param tornjak-frontend.tests.bash.image.registry Registry for testing bash image
      ## @param tornjak-frontend.tests.bash.image.repository Repository for testing bash image
      ## @param tornjak-frontend.tests.bash.image.tag Tag for testing bash image
      ## @param tornjak-frontend.tests.bash.image.version App version for testing bash image
      ## 
      image:
        pullPolicy: IfNotPresent
        registry: cgr.dev
        repository: chainguard/bash
        tag: 5.2.15
        version: ""
  ## @param tornjak-frontend.tolerations Specifies pod tolerations
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/
  ## Example:
  ##   tolerations:
  ##     - key: "example-key"
  ##       operator: "Exists"
  ##       effect: "NoSchedule":
  ## 
  tolerations: []
  ## @param tornjak-frontend.topologySpreadConstraints Specifies topology spread constraints for pod scheduling
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/topology-spread-constraints/
  ## Example:
  ## topologySpreadConstraints:
  ## - maxSkew: 2
  ##   topologyKey: topology.kubernetes.io/zone
  ##   whenUnsatisfiable: ScheduleAnyway
  ##   labelSelector: 
  ##     matchLabels:
  ##       app: tornjak
  topologySpreadConstraints: []

## @section Upstream Spire parameters
## Parameter values for upstream spire server
##
upstream:
  ## @param upstream.enabled Flag for enabling upstream Spire
  enabled: false

## @section Upstream SPIFFE CSI Driver parameters
## Parameter values for upstream-spiffe-csi-driver
##
upstream-spiffe-csi-driver:
  ## @param upstream-spiffe-csi-driver.agentSocketPath The socket path where Spiffe CSI driver mounts agent socket
  agentSocketPath: /run/spire/agent-sockets-upstream/spire-agent.sock
  ## @param upstream-spiffe-csi-driver.nameOverride Override name for upstream SPIFFE CSI driver
  nameOverride: ""
  ## @param upstream-spiffe-csi-driver.namespaceOverride Override namespace for upstream SPIFFE CSI driver
  namespaceOverride: ""
  ## @param upstream-spiffe-csi-driver.fullnameOverride Override name for upstream SPIFFE CSI driver
  fullnameOverride: ""
  ## @param upstream-spiffe-csi-driver.kubeletPath Set the kubelet path for cluster
  kubeletPath: /var/lib/kubelet
  ## @param upstream-spiffe-csi-driver.pluginName Override plugin name
  pluginName: upstream.csi.spiffe.io
  ## @param upstream-spiffe-csi-driver.priorityClassName Priority class for upstream SPIFFE CSI driver pods
  priorityClassName: ""
  global:
    deleteHooks:
      ## @param upstream-spiffe-csi-driver.global.deleteHooks.enabled Override flag for delete hooks
      enabled: true
    installAndUpgradeHooks:
      ## @param upstream-spiffe-csi-driver.global.installAndUpgradeHooks.enabled Override flag for install and upgrade hooks
      enabled: true
    k8s:
      ## @param upstream-spiffe-csi-driver.global.k8s.clusterDomain Domain for k8s cluster
      clusterDomain: cluster.local
    spire:
      ## @param upstream-spiffe-csi-driver.global.spire.upstreamServerAddress Address for upstream Spire instance
      upstreamServerAddress: ""
      ## @param upstream-spiffe-csi-driver.global.spire.bundleConfigMap A configmap containing the Spire bundle
      bundleConfigMap: ""
      ## @param upstream-spiffe-csi-driver.global.spire.clusterName The name of the k8s cluster for Spire install
      clusterName: example-cluster
      image:
        ## @param upstream-spiffe-csi-driver.global.spire.image.registry Image registry override
        registry: ""
      ## @param upstream-spiffe-csi-driver.global.spire.jwtIssuer The issuer for Spire JWT tokens
      jwtIssuer: oidc-discovery.example.org
      ## @param upstream-spiffe-csi-driver.global.spire.trustDomain The trust domain for Spire install
      trustDomain: example.org
  healthChecks:
    ## @param upstream-spiffe-csi-driver.healthChecks.port Port for healthchecks of upstream SPIFFE CSI Driver
    port: 9810
  ## @param upstream-spiffe-csi-driver.image.pullPolicy Image pull policy
  ## @param upstream-spiffe-csi-driver.image.registry Registry for bash images
  ## @param upstream-spiffe-csi-driver.image.repository Repository for the bash image
  ## @param upstream-spiffe-csi-driver.image.tag Tag for bash image
  ## @param upstream-spiffe-csi-driver.image.version App version for bash image
  ## 
  image:
    pullPolicy: IfNotPresent
    registry: ghcr.io
    repository: spiffe/spiffe-csi-driver
    tag: ""
    version: ""
  ## @param upstream-spiffe-csi-driver.imagePullSecrets [array] List of pull secrets for private
  imagePullSecrets: []
  ## @param upstream-spiffe-csi-driver.livenessProbe.initialDelaySeconds Initial delay in seconds for pod liveness probe
  ## @param upstream-spiffe-csi-driver.livenessProbe.timeoutSeconds Timeout in seconds for pod liveness probe
  ##
  livenessProbe:
    initialDelaySeconds: 5
    timeoutSeconds: 5
  nodeDriverRegistrar:
    ## @param upstream-spiffe-csi-driver.nodeDriverRegistrar.image.pullPolicy Image pull policy
    ## @param upstream-spiffe-csi-driver.nodeDriverRegistrar.image.registry Registry for bash images
    ## @param upstream-spiffe-csi-driver.nodeDriverRegistrar.image.repository Repository for the bash image
    ## @param upstream-spiffe-csi-driver.nodeDriverRegistrar.image.tag Tag for bash image
    ## @param upstream-spiffe-csi-driver.nodeDriverRegistrar.image.version App version for bash image
    ## 
    image:
      pullPolicy: IfNotPresent
      registry: registry.k8s.io
      repository: sig-storage/csi-node-driver-registrar
      tag: v2.8.0
      version: ""
    ## @param upstream-spiffe-csi-driver.nodeDriverRegistrar.resources Resources request and limits for pods
    ## ref: https://kubernetes.io/docs/user-guide/compute-resources/
    ## Example:
    ## resources:
    ##   limits:
    ##     memory: 512Mi
    ##   requests:
    ##     memory: 256Mi
    ##     cpu: 250m
    ##
    resources: {}
  ## @param upstream-spiffe-csi-driver.nodeSelector Nodeselector details for upstream SPIFFE CSI driver
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#nodeselector
  ## Example:
  ## nodeSelector:
  ##   kubernetes.io/arch: amd64
  ##
  nodeSelector: {}
  ## @param upstream-spiffe-csi-driver.podAnnotations Annotations to be added at a pod level
  ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
  ## Example:
  ## podAnnotations:
  ##   annotationName1: annotationValue1
  ##   annotationName2: annotationValue2
  ##
  podAnnotations: {}
  ## @param upstream-spiffe-csi-driver.podSecurityContext Security contexts to be set at a container level
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
  ## Example:
  ## podSecurityContext:
  ##   allowPrivilegeEscalation: false
  ##   seccompProfile:
  ##     type: RuntimeDefault:
  ##
  podSecurityContext: {}
  ## @param upstream-spiffe-csi-driver.resources Resources request and limits for pods
  ## ref: https://kubernetes.io/docs/user-guide/compute-resources/
  ## Example:
  ## resources:
  ##   limits:
  ##     memory: 512Mi
  ##   requests:
  ##     memory: 256Mi
  ##     cpu: 250m
  ##
  resources: {}
  securityContext:
    ## @param upstream-spiffe-csi-driver.securityContext.privileged Flag to set pod security context to privileged
    privileged: true
    ## @param upstream-spiffe-csi-driver.securityContext.readOnlyRootFilesystem Flag to set pod filesystem as readonly
    readOnlyRootFilesystem: true
  ## @param upstream-spiffe-csi-driver.serviceAccount.create Flag for service account creation
  ## @param upstream-spiffe-csi-driver.serviceAccount.name Name of service account for Spire server
  ##
  serviceAccount:
    create: true
    name: ""
    ## @param upstream-spiffe-csi-driver.serviceAccount.annotations Annotations to be added to service account
    ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
    ## Example:
    ## annotations:
    ##   annotationName1: annotationValue1
    ##   annotationName2: annotationValue2
    ##
    annotations: {}
  ## @param upstream-spiffe-csi-driver.tolerations Specifies pod tolerations
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/
  ## Example:
  ##   tolerations:
  ##     - key: "example-key"
  ##       operator: "Exists"
  ##       effect: "NoSchedule":
  ##
  tolerations: []

## @section Upstream Spire agent parameters
## Parameter values for upstream Spire agent
##
upstream-spire-agent:
  ## @param upstream-spire-agent.clusterName Name of cluster for install
  clusterName: example-cluster
  ## @param upstream-spire-agent.nameOverride Override name
  nameOverride: agent-upstream
  ## @param upstream-spire-agent.namespaceOverride Override namespace
  namespaceOverride: ""
  ## @param upstream-spire-agent.fullnameOverride Override full-name
  fullnameOverride: ""
  ## @param upstream-spire-agent.logLevel The log level, , valid values are "debug", "info", "warn", and "error" 
  logLevel: info
  ## @param upstream-spire-agent.trustBundleFormat If using trustBundleURL, what format is the url. Choices are "pem" and "spiffe"
  trustBundleFormat: pem
  ## @param upstream-spire-agent.trustBundleURL URL for trust bundle
  trustBundleURL: ""
  ## @param upstream-spire-agent.trustDomain Trust domain for upstream Spire agent
  trustDomain: example.org
  ## @param upstream-spire-agent.bundleConfigMap Config map name for upstream trust bundle
  bundleConfigMap: spire-bundle-upstream
  ## @param upstream-spire-agent.upstream Flag to enable upstream agent for nested configuration
  upstream: true
  ## @param upstream-spire-agent.socketPath The socket path where upstream Spire agent mounts agent socket
  socketPath: /run/spire/agent-sockets-upstream/spire-agent.sock
  ## @param upstream-spire-agent.priorityClassName Name of priority class for pods
  priorityClassName: ""
  global:
    deleteHooks:
      ## @param upstream-spire-agent.global.deleteHooks.enabled Override flag for delete hooks
      enabled: true
    installAndUpgradeHooks:
      ## @param upstream-spire-agent.global.installAndUpgradeHooks.enabled Override flag for install and upgrade hooks
      enabled: true
    k8s:
      ## @param upstream-spire-agent.global.k8s.clusterDomain Domain for k8s cluster
      clusterDomain: cluster.local
    spire:
      ## @param upstream-spire-agent.global.spire.upstreamServerAddress Address for upstream Spire instance
      upstreamServerAddress: ""
      ## @param upstream-spire-agent.global.spire.bundleConfigMap A configmap containing the Spire bundle
      bundleConfigMap: ""
      ## @param upstream-spire-agent.global.spire.clusterName The name of the k8s cluster for Spire install
      clusterName: example-cluster
      image:
        ## @param upstream-spire-agent.global.spire.image.registry Image registry override
        registry: ""
      ## @param upstream-spire-agent.global.spire.jwtIssuer The issuer for Spire JWT tokens
      jwtIssuer: oidc-discovery.example.org
      ## @param upstream-spire-agent.global.spire.trustDomain The trust domain for Spire install
      trustDomain: example.org
  healthChecks:
    ## @param upstream-spire-agent.healthChecks.port Port for healthchecks of upstream Spire agent
    port: 9981
  ## @param upstream-spire-agent.hostAliases [array] List of host aliases for upstream Spire agent
  hostAliases: []
  configMap:
    ## @param upstream-spire-agent.configMap.annotations Annotations for upstream Spire agent configmap
    annotations: {}
  ## @param upstream-spire-agent.initContainers Init container definitions for upstream Spire agent pods
  ## Ref: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/
  ## Example:
  ## initContainers:
  ## - name: initialization-logic
  ##   image: cgr.dev/chainguard/bash:5.2.15
  ##   command: ['sh', '-c', 'echo "Intialization logic here..."']
  ##
  initContainers: []
  ## @param upstream-spire-agent.extraContainers Additional container definitions to run alongside upstream Spire agent containers
  ## Ref: https://kubernetes.io/docs/concepts/containers/
  ## Example:
  ## extraContainers:
  ## - name: extra-container
  ##   image: cgr.dev/chainguard/bash:5.2.15
  ##   command: ['sh', '-c', 'echo "Additional container logic here..."']
  ##
  extraContainers: []
  ## @param upstream-spire-agent.extraVolumes Additional volumes to attach to agent pods
  ## Ref: https://kubernetes.io/docs/concepts/storage/volumes/
  ## Example:
  ## extraVolumes:
  ## - name: extra-volume-1
  ##   emptyDir: {}
  ##
  extraVolumes: []
  ## @param upstream-spire-agent.extraVolumeMounts Additional volume mounts for agent containers
  ## Ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-volume-storage/
  ## Example:
  ## extraVolumeMounts:
  ## - name: extra-volume-mount-1
  ##   mountPath: /data/mount1
  ##   subPath: "path"
  ##
  extraVolumeMounts: []
  ## @param upstream-spire-agent.image.pullPolicy Image pull policy
  ## @param upstream-spire-agent.image.registry Registry for bash images
  ## @param upstream-spire-agent.image.repository Repository for the bash image
  ## @param upstream-spire-agent.image.tag Tag for bash image
  ## @param upstream-spire-agent.image.version App version for bash image
  ## 
  image:
    pullPolicy: IfNotPresent
    registry: ghcr.io
    repository: spiffe/spire-agent
    tag: ""
    version: ""
  ## @param upstream-spire-agent.imagePullSecrets [array] List of pull secrets for private registries
  imagePullSecrets: []
  ## @param upstream-spire-agent.resources Resources request and limits for pods
  ## ref: https://kubernetes.io/docs/user-guide/compute-resources/
  ## Example:
  ## resources:
  ##   limits:
  ##     memory: 512Mi
  ##   requests:
  ##     memory: 256Mi
  ##     cpu: 250m
  ##
  resources: {}
  ## @param upstream-spire-agent.livenessProbe.initialDelaySeconds Initial delay in seconds for pod liveness probe
  ## @param upstream-spire-agent.livenessProbe.periodSeconds Health check period in seconds for pod liveness probe
  ##
  livenessProbe:
    initialDelaySeconds: 15
    periodSeconds: 60
  ## @param upstream-spire-agent.readinessProbe.initialDelaySeconds Initial delay in seconds for pod readiness probe
  ## @param upstream-spire-agent.readinessProbe.periodSeconds Health check period in seconds for pod readiness probe
  ##
  readinessProbe:
    initialDelaySeconds: 15
    periodSeconds: 60
  ## @param upstream-spire-agent.nodeSelector Nodeselector details for upstream SPIFFE CSI driver
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#nodeselector
  ## Example:
  ## nodeSelector:
  ##   kubernetes.io/arch: amd64
  ##
  nodeSelector: {}
  ## @param upstream-spire-agent.podAnnotations Annotations to be added at a pod level
  ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
  ## Example:
  ## podAnnotations:
  ##   annotationName1: annotationValue1
  ##   annotationName2: annotationValue2
  ##
  podAnnotations: {}
  ## @param upstream-spire-agent.podSecurityContext Security contexts to be set at a container level
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
  ## Example:
  ## podSecurityContext:
  ##   allowPrivilegeEscalation: false
  ##   seccompProfile:
  ##     type: RuntimeDefault:
  ##
  podSecurityContext: {}
  ## @param upstream-spire-agent.securityContext [object] Security contexts to be set at a pod level
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
  ## Example:
  ## securityContext:
  ##   allowPrivilegeEscalation: false
  ##   seccompProfile:
  ##     type: RuntimeDefault:
  ##
  securityContext: {}
  ## @param upstream-spire-agent.server.address Address override for spire server
  ## @param upstream-spire-agent.server.namespaceOverride Namespace override for Spire server
  ## @param upstream-spire-agent.server.port Port for Spire server
  ##
  server:
    address: ""
    namespaceOverride: ""
    port: 8081
  serviceAccount:
    ## @param upstream-spire-agent.serviceAccount.create Flag for service account creation
    create: true
    ## @param upstream-spire-agent.serviceAccount.name Name of service account for Spire server
    name: "spire-agent-upstream"
    ## @param upstream-spire-agent.serviceAccount.annotations Annotations to be added to service account
    ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
    ## Example:
    ## annotations:
    ##   annotationName1: annotationValue1
    ##   annotationName2: annotationValue2
    ##
    annotations: {}
  telemetry:
    prometheus:
      ## @param upstream-spire-agent.telemetry.prometheus.enabled Flag to enable prometheus monitoring
      enabled: false
      ## @param upstream-spire-agent.telemetry.prometheus.port Port for metrics scraping
      port: 9989
      podMonitor:
        ## @param upstream-spire-agent.telemetry.prometheus.podMonitor.enabled Flag for enabling podMonitor
        enabled: false
        ## @param upstream-spire-agent.telemetry.prometheus.podMonitor.namespace Namespace for podMonitor
        namespace: ""
        ## @param upstream-spire-agent.telemetry.prometheus.podMonitor.labels Labels for podMonitor
        ## Ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
        ## Example:
        ## labels:
        ##   app: spire-server
        ##
        labels: {}
  ## @param upstream-spire-agent.tolerations Specifies pod tolerations
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/
  ## Example:
  ##   tolerations:
  ##     - key: "example-key"
  ##       operator: "Exists"
  ##       effect: "NoSchedule":
  ##
  tolerations: []
  fsGroupFix:
    ## @param upstream-spire-agent.fsGroupFix.image.pullPolicy Image pull policy
    ## @param upstream-spire-agent.fsGroupFix.image.registry Registry for bash images
    ## @param upstream-spire-agent.fsGroupFix.image.repository Repository for the bash image
    ## @param upstream-spire-agent.fsGroupFix.image.tag Tag for bash image
    ## @param upstream-spire-agent.fsGroupFix.image.version App version for bash image
    ## 
    image:
      pullPolicy: Always
      registry: cgr.dev
      repository: chainguard/bash
      tag: latest@sha256:96ab1600d945b4a99c8610b5c8b31e346da63dc20573a26bb0777dd0190db5d4
      version: ""
    ## @param upstream-spire-agent.fsGroupFix.resources Resources request and limits for pods
    ## ref: https://kubernetes.io/docs/user-guide/compute-resources/
    ## Example:
    ## resources:
    ##   limits:
    ##     memory: 512Mi
    ##   requests:
    ##     memory: 256Mi
    ##     cpu: 250m
    ##
    resources: {}
  waitForIt:
    ## @param upstream-spire-agent.waitForIt.image.pullPolicy Image pull policy
    ## @param upstream-spire-agent.waitForIt.image.registry Registry for bash images
    ## @param upstream-spire-agent.waitForIt.image.repository Repository for the bash image
    ## @param upstream-spire-agent.waitForIt.image.tag Tag for bash image
    ## @param upstream-spire-agent.waitForIt.image.version App version for bash image
    ## 
    image:
      pullPolicy: IfNotPresent
      registry: cgr.dev
      repository: chainguard/wait-for-it
      tag: latest@sha256:deeaccb164a67a4d7f585c4d416641b1f422c029911a29d72beae28221f823df
      version: ""
    ## @param upstream-spire-agent.waitForIt.resources Resources request and limits for pods
    ## ref: https://kubernetes.io/docs/user-guide/compute-resources/
    ## Example:
    ## resources:
    ##   limits:
    ##     memory: 512Mi
    ##   requests:
    ##     memory: 256Mi
    ##     cpu: 250m
    ##
    resources: {}
  workloadAttestors:
    k8s:
      ## @param upstream-spire-agent.workloadAttestors.k8s.disableContainerSelectors Configure k8s workload attestor to disable container selectors
      disableContainerSelectors: false
      ## @param upstream-spire-agent.workloadAttestors.k8s.skipKubeletVerification Configure k8s workload attestor to skip kubelet cert verification
      skipKubeletVerification: true
    unix:
      ## @param upstream-spire-agent.workloadAttestors.unix.enabled Flag to enable unix workload attestor
      enabled: false


